<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net">

  <!-- Connect to RabbitMQ -->
  <object id="ConnectionFactory" type="Spring.Messaging.Amqp.Rabbit.Connection.CachingConnectionFactory, Spring.Messaging.Amqp.Rabbit">
    <property name="Username" value="guest"/>
    <property name="Password" value="guest"/>
    <property name="Host" value="localhost"/>
  </object>
  
   <!-- Listen for Messages -->
  <object name="MessageListenerContainer" type="Spring.Messaging.Amqp.Rabbit.Listener.SimpleMessageListenerContainer, Spring.Messaging.Amqp.Rabbit" init-method="Start">
    <property name="ConnectionFactory" ref="ConnectionFactory"/>
    <property name="QueueNames" value="Sample.Queue"/>
    <property name="ConcurrentConsumers" value="5"/>
    <property name="MessageListener" ref="MessageListenerAdapter"/>
  </object>

  <!-- Handle Messages -->
  <object id="MessageListenerAdapter" type="Spring.Messaging.Amqp.Rabbit.Listener.Adapter.MessageListenerAdapter, Spring.Messaging.Amqp.Rabbit">
    <property name="HandlerObject" ref="DefaultMessageHandler"/>
    <property name="DefaultListenerMethod" value="Handle"/>
    <property name="MessageConverter" ref="JsonMessageConverter"/>
  </object>
  
  <!-- Convert Data -->
  <object name="JsonMessageConverter" type="Spring.Messaging.Amqp.Support.Converter.JsonMessageConverter, Spring.Messaging.Amqp">
    <property name="CreateMessageIds" value="true" />
    <property name="TypeMapper" ref="TypeMapper"/>
  </object>  

  <object name="TypeMapper" type="Spring.Messaging.Amqp.Support.Converter.DefaultTypeMapper, Spring.Messaging.Amqp">
    <property name="IdTypeMapping">
      <dictionary key-type="System.String" value-type="System.Object">
        <entry key="WeatherRequestMessageType" value="Contract.WeatherRequest, Contract" />
        <entry key="WeatherResponseMessageType" value="Contract.WeatherResponse, Contract" />        
      </dictionary>
    </property>
  </object>

 
  
</objects>

